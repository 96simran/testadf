name: Promote ADF Pipeline and Datasets from Dev to QA

on:
  push:
    branches:
      - adf_publish

env:
  TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  RESOURCE_GROUP: Test-adf
  DEV_FACTORY_NAME: testing-adf-repo
  TARGET_RESOURCE_GROUP: Test-adf
  TARGET_FACTORY_NAME: QA-testing-adf
  TARGET_PIPELINE_NAME: MoveFiles
  API_VERSION: 2018-06-01
  DATASETS_DIR: qa_datasets

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Get Azure Access Token
        id: get_token
        run: |
          ACCESS_TOKEN=$(curl -s -X POST -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET&resource=https://management.azure.com/" \
            "https://login.microsoftonline.com/$TENANT_ID/oauth2/token" | jq -r .access_token)
          echo "::add-mask::$ACCESS_TOKEN"
          echo "access_token=$ACCESS_TOKEN" >> $GITHUB_OUTPUT

      - name: Export pipeline from Dev
        env:
          ACCESS_TOKEN: ${{ steps.get_token.outputs.access_token }}
        run: |
          curl -s -X GET "https://management.azure.com/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$DEV_FACTORY_NAME/pipelines/$TARGET_PIPELINE_NAME?api-version=$API_VERSION" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -o pipeline.json
          cat pipeline.json
          if grep -q '"error"' pipeline.json; then
            echo "Failed to export pipeline! Contents of pipeline.json:"
            cat pipeline.json
            exit 1
          fi

      - name: Find referenced datasets and export from Dev
        env:
          ACCESS_TOKEN: ${{ steps.get_token.outputs.access_token }}
          DATASETS_DIR: ${{ env.DATASETS_DIR }}
          SUBSCRIPTION_ID: ${{ env.SUBSCRIPTION_ID }}
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          DEV_FACTORY_NAME: ${{ env.DEV_FACTORY_NAME }}
          API_VERSION: ${{ env.API_VERSION }}
        run: |
          mkdir -p "$DATASETS_DIR"
          # Extract unique referenced dataset names
          jq -r '.. | objects | select(has("referenceName")) | .referenceName' pipeline.json | sort -u > referenced_datasets.txt
          echo "Referenced datasets:"
          cat referenced_datasets.txt

          # Export and QA-rename each dataset
          while read ds; do
            # Export from Dev
            curl -s -X GET "https://management.azure.com/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$DEV_FACTORY_NAME/datasets/$ds?api-version=$API_VERSION" \
              -H "Authorization: Bearer $ACCESS_TOKEN" \
              -H "Content-Type: application/json" \
              -o "$DATASETS_DIR/$ds.json"
            if grep -q '"error"' "$DATASETS_DIR/$ds.json"; then
              echo "Failed to export dataset $ds"
              cat "$DATASETS_DIR/$ds.json"
              exit 1
            fi
            # Rename dataset name inside JSON
            jq --arg newname "QA_$ds" '.name = $newname' "$DATASETS_DIR/$ds.json" > "$DATASETS_DIR/QA_$ds.json"
          done < referenced_datasets.txt

      - name: Deploy all QA datasets to QA Data Factory
        env:
          ACCESS_TOKEN: ${{ steps.get_token.outputs.access_token }}
          DATASETS_DIR: ${{ env.DATASETS_DIR }}
          TARGET_RESOURCE_GROUP: ${{ env.TARGET_RESOURCE_GROUP }}
          TARGET_FACTORY_NAME: ${{ env.TARGET_FACTORY_NAME }}
          SUBSCRIPTION_ID: ${{ env.SUBSCRIPTION_ID }}
          API_VERSION: ${{ env.API_VERSION }}
        run: |
          for f in $DATASETS_DIR/QA_*.json; do
            dsname=$(jq -r '.name' "$f")
            echo "Deploying dataset: $dsname"
            curl -s -X PUT "https://management.azure.com/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$TARGET_RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$TARGET_FACTORY_NAME/datasets/$dsname?api-version=$API_VERSION" \
              -H "Authorization: Bearer $ACCESS_TOKEN" \
              -H "Content-Type: application/json" \
              --data @"$f" | tee deploy_output.json
            if grep -q '"error"' deploy_output.json; then
              echo "Failed to deploy dataset $dsname"
              cat deploy_output.json
              exit 1
            fi
          done

      - name: Prefix all referenceNames in pipeline JSON
        run: |
          jq 'walk(
            if type == "object" and has("referenceName") then
              .referenceName |= "QA_" + .
            else .
            end
          )' pipeline.json > pipeline_qa.json
          cat pipeline_qa.json
          if grep -q '"error"' pipeline_qa.json; then
            echo "Pipeline QA JSON is not valid! Contents:"
            cat pipeline_qa.json
            exit 1
          fi

      - name: Deploy QA pipeline to QA Data Factory
        env:
          ACCESS_TOKEN: ${{ steps.get_token.outputs.access_token }}
          TARGET_RESOURCE_GROUP: ${{ env.TARGET_RESOURCE_GROUP }}
          TARGET_FACTORY_NAME: ${{ env.TARGET_FACTORY_NAME }}
          SUBSCRIPTION_ID: ${{ env.SUBSCRIPTION_ID }}
          API_VERSION: ${{ env.API_VERSION }}
          TARGET_PIPELINE_NAME: ${{ env.TARGET_PIPELINE_NAME }}
        run: |
          curl -s -X PUT "https://management.azure.com/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$TARGET_RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$TARGET_FACTORY_NAME/pipelines/$TARGET_PIPELINE_NAME?api-version=$API_VERSION" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            --data @pipeline_qa.json | tee deploy_output.json
          if grep -q '"error"' deploy_output.json; then
            echo "Failed to deploy pipeline"
            cat deploy_output.json
            exit 1
          fi

      - name: Upload all artifacts
        uses: actions/upload-artifact@v4
        with:
          name: adf_artifacts
          path: |
            pipeline.json
            pipeline_qa.json
            referenced_datasets.txt
            qa_datasets/*.json
