name: Deploy ADF to QA via selection

on:
  push:
    branches:
      - adf_publish

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # - name: Checkout code
    #   uses: actions/checkout@v3

    - name: Download and deploy ADF pipeline
      env:
        TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TARGET_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        RESOURCE_GROUP: Test-adf
        DEV_FACTORY_NAME: testing-adf-repo
        TARGET_RESOURCE_GROUP: Test-adf
        TARGET_FACTORY_NAME: QA-testing-adf
        TARGET_PIPELINE_NAME: MoveFiles1
      run: |
        # set -e

        # Get token
        ACCESS_TOKEN=$(curl -X POST -H "Content-Type: application/x-www-form-urlencoded" \
          -d "grant_type=client_credentials&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET&resource=https://management.azure.com/" \
          "https://login.microsoftonline.com/$TENANT_ID/oauth2/token" | jq -r .access_token)

        # Export selected pipeline from Dev ADF
        echo "Exporting pipeline from Dev..."
        curl -X GET "https://management.azure.com/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$DEV_FACTORY_NAME/pipelines/MoveFiles?api-version=2018-06-01" \
          -H "Authorization: Bearer $ACCESS_TOKEN" \
          -H "Content-Type: application/json" \
          -o pipeline.json

        # Process datasets (input and output)
        DATASETS=("BinaryDataSource_Folder1" "BinaryDataSource_File1" "BinaryDataDestination1")
        OLD_LS_INPUT="devlinkinputsource"
        NEW_LS_INPUT="qalinkputsource"
        OLD_LS_OUTPUT="devlinkoutputsource"
        NEW_LS_OUTPUT="qalinkoutputsource"

        for DATASET in "${DATASETS[@]}"
        do
          echo "Processing dataset: $DATASET"

          # Export dataset from Dev
          curl -X GET "https://management.azure.com/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$DEV_FACTORY_NAME/datasets/$DATASET?api-version=2018-06-01" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -o dataset_$DATASET.json

          # Update linked service references (input and output)
          tmpfile=$(mktemp)
          jq --arg OLDIN "$OLD_LS_INPUT" --arg NEWIN "$NEW_LS_INPUT" --arg OLDOUT "$OLD_LS_OUTPUT" --arg NEWOUT "$NEW_LS_OUTPUT" \
            '
            if .properties.linkedServiceName.referenceName == $OLDIN
              then .properties.linkedServiceName.referenceName = $NEWIN
            elif .properties.linkedServiceName.referenceName == $OLDOUT
              then .properties.linkedServiceName.referenceName = $NEWOUT
            else .
            end
            ' dataset_$DATASET.json > "$tmpfile" && mv "$tmpfile" dataset_$DATASET.json

          # Import dataset into QA
          curl -X PUT "https://management.azure.com/subscriptions/$TARGET_SUBSCRIPTION_ID/resourceGroups/$TARGET_RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$TARGET_FACTORY_NAME/datasets/$DATASET?api-version=2018-06-01" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            --data @dataset_$DATASET.json

        done

        # Import and publish updated pipeline to QA environment ADF
        echo "Deploying pipeline to QA..."
        curl -X PUT "https://management.azure.com/subscriptions/$TARGET_SUBSCRIPTION_ID/resourceGroups/$TARGET_RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$TARGET_FACTORY_NAME/pipelines/$TARGET_PIPELINE_NAME?api-version=2018-06-01" \
          -H "Authorization: Bearer $ACCESS_TOKEN" \
          -H "Content-Type: application/json" \
          --data @pipeline.json

    - name: upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: adf_artifacts
        path: |
          pipeline.json
          dataset_*.json