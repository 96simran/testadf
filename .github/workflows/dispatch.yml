name: Export and Import Azure Data Factory Pipeline from Dev to QA

on:
  workflow_dispatch:
    inputs:
      pipeline_name:
        description: 'Pipeline to migrate'
        required: true
        default: 'MoveFiles1'

env:
  TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  TARGET_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  RESOURCE_GROUP: Test-adf
  DEV_FACTORY_NAME: testing-adf-repo
  TARGET_RESOURCE_GROUP: Test-adf
  TARGET_FACTORY_NAME: QA-testing-adf
  TARGET_PIPELINE_NAME: ${{ github.event.inputs.pipeline_name }}

jobs:
  export-import-adf-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Get Azure Access Token
        id: get_token
        run: |
          ACCESS_TOKEN=$(curl -X POST -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET&resource=https://management.azure.com/" \
            "https://login.microsoftonline.com/$TENANT_ID/oauth2/token" | jq -r .access_token)
          echo "::add-mask::$ACCESS_TOKEN"
          echo "access_token=$ACCESS_TOKEN" >> "$GITHUB_OUTPUT"

      - name: Export Pipeline JSON from Dev
        id: export_pipeline
        run: |
          export ACCESS_TOKEN=${{ steps.get_token.outputs.access_token }}
          PIPELINE_JSON=$(curl -s -X GET \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            "https://management.azure.com/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$DEV_FACTORY_NAME/pipelines/${{ env.TARGET_PIPELINE_NAME }}?api-version=2018-06-01")
          echo "$PIPELINE_JSON" > pipeline.json

      - name: Update parameters for QA
        id: update_json
        run: |
          cat pipeline.json | \
          jq '
            # update linkedServices/datasets parameters within activities
            .properties.activities |= map(
              if .type == "Copy" and .typeProperties? then
                .typeProperties.source.parameters |= with_entries(
                  if (.key | test("SourceStore_Location")) then .key = "QA_SourceStore_Location" elif (.key | test("SourceStore_Directory")) then .key = "QA_SourceStore_Directory" else . end
                ) // .
                | .typeProperties.source.parameters |= with_entries(
                    if (.key | test("DestinationStore_Location")) then .key = "QA_DestinationStore_Location" elif (.key | test("DestinationStore_Directory")) then .key = "QA_DestinationStore_Directory" else . end
                  ) // .
              else . end
            )
            # update pipeline parameters if present
            | .properties.parameters |= with_entries(
                if (.key | test("SourceStore_Location")) then .key = "QA_SourceStore_Location" elif (.key | test("SourceStore_Directory")) then .key = "QA_SourceStore_Directory"
                elif (.key | test("DestinationStore_Location")) then .key = "QA_DestinationStore_Location" elif (.key | test("DestinationStore_Directory")) then .key = "QA_DestinationStore_Directory"
                else . end
              ) // .
          ' > pipeline_qa.json

      - name: Import Pipeline JSON to QA
        run: |
          export ACCESS_TOKEN=${{ steps.get_token.outputs.access_token }}
          RESPONSE=$(curl -s -X PUT \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            --data @pipeline_qa.json \
            "https://management.azure.com/subscriptions/$TARGET_SUBSCRIPTION_ID/resourceGroups/$TARGET_RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$TARGET_FACTORY_NAME/pipelines/${{ env.TARGET_PIPELINE_NAME }}?api-version=2018-06-01")
          echo "$RESPONSE"