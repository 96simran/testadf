name: Export and Import Azure Data Factory Pipeline from Dev to QA

on:
  workflow_dispatch:
    inputs:
      pipeline_name:
        description: 'Pipeline to migrate'
        required: true
        default: 'MoveFiles1'

env:
  TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  TARGET_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  RESOURCE_GROUP: Test-adf
  DEV_FACTORY_NAME: testing-adf-repo
  TARGET_RESOURCE_GROUP: Test-adf
  TARGET_FACTORY_NAME: QA-testing-adf
  TARGET_PIPELINE_NAME: ${{ github.event.inputs.pipeline_name }}

jobs:
  export-import-adf-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Get Azure Access Token
        id: get_token
        run: |
          ACCESS_TOKEN=$(curl -X POST -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET&resource=https://management.azure.com/" \
            "https://login.microsoftonline.com/$TENANT_ID/oauth2/token" | jq -r .access_token)
          echo "::add-mask::$ACCESS_TOKEN"
          echo "access_token=$ACCESS_TOKEN" >> "$GITHUB_OUTPUT"

      - name: Export Pipeline JSON from Dev
        env:
          ACCESS_TOKEN: ${{ steps.get_token.outputs.access_token }}
        run: |
          curl -s -X GET "https://management.azure.com/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$DEV_FACTORY_NAME/pipelines/$TARGET_PIPELINE_NAME?api-version=2018-06-01" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -o pipeline.json

          echo "Exported pipeline.json:"
          cat pipeline.json
          if grep -q '"error"' pipeline.json; then
            echo "Failed to export pipeline! Contents of pipeline.json:"
            cat pipeline.json
            exit 1
          fi  

      - name: Update parameters for QA
        id: update_json
        run: |
          cat pipeline.json | \
          jq '
            # Update all parameter keys in Copy activities if activities exist and are an array
            if (.properties.activities and (.properties.activities | type == "array")) then
              .properties.activities |= map(
                if .type == "Copy" and (.typeProperties? and .typeProperties.source?.parameters?) then
                  .typeProperties.source.parameters |=
                    with_entries(
                      .key |= "QA_" + .
                    )
                else . end
              )
            else . end
            # Update all pipeline parameter keys if parameters exist and are an object
            | if (.properties.parameters and (.properties.parameters | type == "object")) then
                .properties.parameters |=
                  with_entries(
                    .key |= "QA_" + .
                  )
              else . end
          ' > pipeline_qa.json

      - name: Import Pipeline JSON to QA
        run: |
          export ACCESS_TOKEN=${{ steps.get_token.outputs.access_token }}
          RESPONSE=$(curl -s -X PUT \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            --data @pipeline_qa.json \
            "https://management.azure.com/subscriptions/$TARGET_SUBSCRIPTION_ID/resourceGroups/$TARGET_RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$TARGET_FACTORY_NAME/pipelines/${{ env.TARGET_PIPELINE_NAME }}?api-version=2018-06-01")
          echo "$RESPONSE"

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: adf_artifacts
          path: |
              pipeline.json
              pipeline_qa.json